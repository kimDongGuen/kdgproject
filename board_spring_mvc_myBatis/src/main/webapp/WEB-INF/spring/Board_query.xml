<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
	
<!--여러 도메인을 위한 쿼리 xml를 작성할 때  도메인을 식별하기 위해 
    namespace 부여 
=> sqlSession.쿼리메서드("식별자", paramdata);
    식별자 =>  namespace.id
  ex)sqlSession.selectOne("board.search", paramdata);    
-->	
<mapper namespace="board">
	<!--
	    resultMap을 사용하는 경우 
	    1. 컬럼명과 속성명이 다를때 매핑
	    2. join
	  -->
	  
	<resultMap type="boardfile" id="filemap">
	    <!-- primary key 인경우 id 태그로 설정  -->
		<id  	column="fileno"    	property="no"/>
		<!-- primary key가 아닌 다른 column -->
		<result	column="rfilename" 	property="rfileName"/>
		<result	column="sfilename" 	property="fileName"/>
		<result	column="bno" 		property="bno"/>
	</resultMap>


	<resultMap type="board" id="boardmap">
		<id		column="no"			property="no"/>
		<result	column="id"			property="id"/>
		<result	column="title"		property="title"/>
		<result	column="regdate"	property="regdate"/>
		<result	column="contents"	property="contents"/>
		<result	column="id"			property="id"/>
		<!-- join data 처리 
			 1 : 1     association  태그 사용
			 1 : N     collection   태그 사용
			 속성 
			 property  객체에 매핑되는 속성명
			 ofType    join 매핑되는 실제 타입
			 resultMap join 매핑되는 resultMap id
			 
		 -->
		<collection property="files" 		ofType="boardfile"  
					resultMap="boardmap"/>
	</resultMap>
	<select id="search"		parameterType="int"  resultMap="boardmap" >
		select 	b.no no, id, title, contents ,regdate        
		   		, bf.no fileno, rfilename, sfilename             
		from   boardfile bf,                                
		      (select  no, id, title, contents              
		              , to_char(regdate,'yy-mm-dd') regdate 
		       from    board                                
		       where   no = #{no}   ) b                           
		where b.no = bf.bno(+)                              	
	</select>
	<select id="searchAll"	parameterType="pagebean"  resultType="board">
		select no, id, title, contents, 
		       to_char(regdate, 'yyyy-mm-dd') regdate
		from board
		<where>
			<if test="word != null ">
				<choose>
					<when test="key == 'id'">
						id = #{word}
					</when>
					<when test="key == 'title'">
						title  like '%'||#{word}||'%'
					</when>
					<when test="key == 'contents'">
						contents like '%'||#{word}||'%'
					</when>
				</choose>
			</if>
		</where>
		order by no desc
	</select>
	<select id="getCount"	parameterType="pagebean"  resultType="int">
		select count(*)
		from board
		<where>
			<if test="word != null ">
				<choose>
					<when test="key == 'id'">
						id = #{word}
					</when>
					<when test="key == 'title'">
						title  like '%'||#{word}||'%'
					</when>
					<when test="key == 'contents'">
						contents like '%'||#{word}||'%'
					</when>
				</choose>
			</if>
		</where>
	</select>
	
	<select id="getBoardNo"	resultType="int">
		select board_no.nextval from dual
	</select>
	<insert id="insert"		parameterType="board">
		insert into board(no, id, title, contents, regdate)
		values(  #{no:INTEGER} 
		         ,#{id:VARCHAR} 
		         ,#{title:VARCHAR} 
		         ,#{contents:VARCHAR} 
		         ,sysdate
		      )
	</insert>
	<insert id="insertFile"	parameterType="boardfile">
		insert into boardfile(no, rfilename, sfilename, bno)
		values(	 boardfile_no.nextval
				,#{rfilename:VARCHAR}  
				,#{sfilename:VARCHAR}  
				,#{bno:INTEGER}  
			   )
	</insert>
	<update id="update"		parameterType="board">
		update board set id=#{id:VARCHAR} 
		               , title=#{title:VARCHAR}
		               , contents=#{contents:VARCHAR}
		               , regdate=sysdate
	    where no=#{no:INTEGER}               
	</update>
	<delete id="delete"  parameterType="int">
		delete from board where no=#{no}
	</delete>
		
</mapper>













